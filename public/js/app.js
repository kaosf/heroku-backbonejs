// Generated by CoffeeScript 1.6.2
(function() {
  var AddTaskView, Task, TaskView, Tasks, TasksView, addTaskView, tasks, tasksView;

  Task = Backbone.Model.extend({
    defaults: {
      title: 'do something',
      completed: false
    },
    validate: function(attrs) {
      if (_.isEmpty(attrs.title)) {
        return 'title must not be empty';
      }
    },
    initialize: function() {
      this.on('invalid', function(model, error) {
        $('#error').html(error);
      });
    }
  });

  Tasks = Backbone.Collection.extend({
    model: Task
  });

  TaskView = Backbone.View.extend({
    tagName: 'li',
    initialize: function() {
      this.model.on('destroy', this.remove, this);
      return this.model.on('change', this.render, this);
    },
    events: {
      'click .delete': 'destroy',
      'click .toggle': 'toggle'
    },
    toggle: function() {
      this.model.set('completed', !(this.model.get('completed')));
    },
    destroy: function() {
      if (confirm('are you sure?')) {
        this.model.destroy();
      }
    },
    remove: function() {
      this.$el.remove();
    },
    template: _.template($('#task-template').html()),
    render: function() {
      var template;

      template = this.template(this.model.toJSON());
      this.$el.html(template);
      return this;
    }
  });

  TasksView = Backbone.View.extend({
    tagName: 'ul',
    initialize: function() {
      this.collection.on('add', this.addNew, this);
      this.collection.on('change', this.updateCount, this);
      this.collection.on('destroy', this.updateCount, this);
    },
    addNew: function(task) {
      var taskView;

      taskView = new TaskView({
        model: task
      });
      this.$el.append(taskView.render().el);
      $('#title').val('').focus();
      this.updateCount();
    },
    updateCount: function() {
      var uncompletedTasks;

      uncompletedTasks = this.collection.filter(function(task) {
        return !(task.get('completed'));
      });
      return $('#count').html(uncompletedTasks.length);
    },
    render: function() {
      var _this = this;

      this.collection.each(function(task) {
        var taskView;

        taskView = new TaskView({
          model: task
        });
        return _this.$el.append(taskView.render().el);
      });
      this.updateCount();
      return this;
    }
  });

  AddTaskView = Backbone.View.extend({
    el: '#addTask',
    events: {
      'submit': 'submit'
    },
    submit: function(e) {
      var task;

      e.preventDefault();
      task = new Task();
      if (task.set({
        title: $('#title').val()
      }, {
        validate: true
      })) {
        this.collection.add(task);
        return $('#error').empty();
      }
    }
  });

  tasks = new Tasks([
    {
      title: 'task1',
      completed: true
    }, {
      title: 'task2'
    }, {
      title: 'task3'
    }
  ]);

  tasksView = new TasksView({
    collection: tasks
  });

  addTaskView = new AddTaskView({
    collection: tasks
  });

  $('#tasks').html(tasksView.render().el);

}).call(this);
